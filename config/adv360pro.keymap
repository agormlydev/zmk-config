#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/pointing.h>

#define AS(keycode) &as LS(keycode) keycode

/ {
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <107>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        ht_tp: auto_ctrl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp CAPS  AS(N1)    AS(N2)    AS(N3)    AS(N4)     AS(N5) &kp LC(X)                                                           &mo 5     AS(N6)   AS(N7)   AS(N8)   AS(N9)    AS(N0) &caps_word
                AS(TAB)   AS(SQT)   AS(COMMA) AS(DOT)   AS(P)      AS(Y)  &kp LC(C)                                                           &kp LC(V) AS(F)    AS(G)    AS(C)    AS(R)     AS(L)  AS(EQUAL) 
                AS(ESC)   AS(A)     AS(O)     AS(E)     AS(U)      AS(I)  &none                        &none     &none     &none    &none         &none     AS(D)    AS(H)    AS(T)    AS(N)     AS(S)  &kp ENTER
                AS(GRAVE) AS(SEMI)  AS(Q)     AS(J)     AS(K)      AS(X)                                         &none     &none                            AS(B)    AS(M)    AS(W)    AS(V)     AS(Z)  AS(MINUS)
                &none     &mo 1     &kp LCTRL &kp LSHFT &kp LALT                    &ht_tp LCTRL SPACE &kp BSPC  &kp LGUI  &kp LGUI &kp DEL &mo 3                    &kp RALT &kp RSFT &kp RCTRL &mo 2  &none
            >;
        };
        sym_fun {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans                                            &trans &kp F6 &kp F7   &kp F8   &kp F9   &kp F10  &kp F11
                &trans &trans &trans &trans &trans &trans &trans                                            &trans &trans &trans   &trans   &trans   &trans   &kp F12
                &trans &trans &trans &trans &trans &trans &trans        &trans &trans  &trans &trans        &trans &trans AS(LBKT) AS(RBKT) AS(FSLH) AS(BSLH) &trans
                &trans &trans &trans &trans &trans &trans                      &trans  &trans                      &trans &trans   &trans   &trans   &trans   &trans
                &trans &trans &trans &trans &trans               &trans &trans &trans  &trans &trans &trans               &trans   &trans   &trans   &trans   &trans
            >;
        };
        nav_fun {
            bindings = <
                &trans &kp F1   &kp F2    &kp F3    &kp F4    &kp F5 &trans                                            &trans &trans &trans &trans &trans &trans &trans
                &trans &kp HOME &kp PG_DN &kp PG_UP &kp END   &trans &trans                                            &trans &trans &trans &trans &trans &trans &trans
                &trans &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &trans &trans        &trans &trans  &trans &trans        &trans &trans &trans &trans &trans &trans &trans
                &trans &trans   &trans    &trans    &trans    &trans                      &trans  &trans                      &trans &trans &trans &trans &trans &trans
                &trans &trans   &trans    &trans    &trans                  &trans &trans &trans  &trans &trans &trans               &trans &trans &trans &trans &trans
            >;
        };
        mouse {
            bindings = <
                &trans &trans         &trans         &trans       &trans          &trans &trans                                                  &trans &trans &trans   &trans   &trans    &trans &trans
                &trans &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_UP &msc SCRL_RIGHT &trans &trans                                                  &trans &trans &trans   &trans   &trans    &trans &trans
                &trans &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &trans &trans           &trans    &trans  &trans &trans        &trans &trans &kp RALT &kp RSFT &kp RCTRL &mo 4 &trans
                &trans &trans         &trans         &trans       &trans          &trans                            &trans  &trans                      &trans &trans   &trans   &trans    &trans &trans
                &trans &trans         &trans         &trans       &trans                        &mkp LCLK &mkp RCLK &trans  &trans &trans &trans               &trans   &trans   &trans    &trans &trans
            >;
        };
        slow_mouse {
            bindings = <
                &trans &trans         &trans         &trans       &trans          &trans &trans                                                  &trans &trans &trans   &trans   &trans    &trans &trans
                &trans &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_UP &msc SCRL_RIGHT &trans &trans                                                  &trans &trans &trans   &trans   &trans    &trans &trans
                &trans &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &trans &trans           &trans    &trans  &trans &trans        &trans &trans &kp RALT &kp RSFT &kp RCTRL &trans &trans
                &trans &trans         &trans         &trans       &trans          &trans                            &trans  &trans                      &trans &trans   &trans   &trans    &trans &trans
                &trans &trans         &trans         &trans       &trans                        &mkp LCLK &mkp RCLK &trans  &trans &trans &trans               &trans   &trans   &trans    &trans &trans
            >;
        };
        mod {
            bindings = <
                &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                               &trans      &none &none      &none      &none &none &none
                &none &none        &none        &none        &none        &none        &bootloader                                                         &bootloader &none &none      &none      &none &none &none
                &none &none        &none        &none        &none        &none        &none             &none &none &bt BT_CLR &none                      &none       &none &none      &none      &none &none &none
                &none &none        &none        &none        &none        &none                                &none &none                                             &none &none      &none      &none &none &none
                &none &none        &none        &none        &none                                 &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                   &bl BL_INC &bl BL_DEC &none &none &none
            >;
        };
    };
};

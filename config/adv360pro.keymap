#include <behaviors.dtsi>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/pointing.h>

#define AS(keycode) &as LS(keycode) keycode

// &mmv {
//     acceleration-exponent = <0>;
//     time-to-max-speed-ms = <0>;
// };
// &msc {
//     acceleration-exponent = <0>;
//     time-to-max-speed-ms = <0>;
// };

// &mkp_input_listener {
//     input-processors = <&zip_xy_scaler 1 5>;
//     layers = <4>
// };

&lt {
    tapping-term-ms = <200>;
};

/ {
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        ht_tp: auto_ctrl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        mo_6_under_l: mo_6_underscore_l {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mo 6>, <&kp UNDER>;
            mods = <(MOD_RSFT)>;
        };
        mo_6_under_r: mo_6_underscore_r {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mo 6>, <&kp UNDER>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp CAPS  &kp N1    &kp N2    &kp N3    &kp N4     &kp N5 &none                                                                             &mo 5     &kp N6   &kp N7   &kp N8   &kp N9    &kp N0 &caps_word
                &kp TAB   &kp SQT   &kp COMMA &kp DOT   &kp P      &kp Y  &kp LC(X)                                                                         &none     &kp F    &kp G    &kp C    &kp R     &kp L  &kp EQUAL 
                &kp ESC   &kp A     &kp O     &kp E     &kp U      &kp I  &kp LC(C)                    &none         &none     &none    &none               &kp LC(V) &kp D    &kp H    &kp T    &kp N     &kp S  &kp ENTER
                &kp GRAVE &kp SEMI  &kp Q     &kp J     &kp K      &kp X                                             &none     &none                                  &kp B    &kp M    &kp W    &kp V     &kp Z  &kp MINUS
                &none     &mo 1     &kp LCTRL &kp LSHFT &kp LALT                    &ht_tp LCTRL SPACE &mo_6_under_l &kp LGUI  &kp LGUI &mo_6_under_r &mo 3                    &kp RALT &kp RSFT &kp RCTRL &mo 2  &none
            >;
        };
        sym_fun {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans                                               &trans &kp F6 &kp F7   &kp F8   &kp F9   &kp F10  &kp F11
                &trans &trans &trans &trans &trans &trans &trans                                               &trans &trans &trans   &trans   &trans   &trans   &kp F12
                &trans &trans &trans &trans &trans &trans &trans        &trans &trans    &trans &trans         &trans &trans &kp LBKT &kp RBKT &kp FSLH &kp BSLH &trans
                &trans &trans &trans &trans &trans &trans                      &trans    &trans                      &trans &trans   &trans   &trans   &trans   &trans
                &trans &trans &trans &trans &trans               &trans &kp BSPC &trans  &trans &kp DEL &trans              &trans   &trans   &trans   &trans   &trans
            >;
        };
        nav_fun {
            bindings = <
                &trans &kp F1   &kp F2    &kp F3    &kp F4    &kp F5 &trans                                                 &trans &trans &trans &trans &trans &trans &trans
                &trans &kp HOME &kp PG_DN &kp PG_UP &kp END   &trans &trans                                                 &trans &trans &trans &trans &trans &trans &trans
                &trans &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &trans &trans           &trans   &trans  &trans &trans        &trans &trans &trans &trans &trans &trans &trans
                &trans &trans   &trans    &trans    &trans    &trans                           &trans  &trans                      &trans &trans &trans &trans &trans &trans
                &trans &trans   &trans    &trans    &trans                  &kp SPACE &kp BSPC &trans  &trans &kp DEL &trans               &trans &trans &trans &trans &trans
            >;
        };
        mouse {
            bindings = <
                &trans &trans         &trans         &trans       &trans          &trans &trans                                                  &trans &trans &trans   &trans   &trans    &trans &trans
                &trans &msc MOVE_X(-30) &msc MOVE_Y(-30) &msc MOVE_Y(30) &msc MOVE_X(30) &trans &trans                                                  &trans &trans &trans   &trans   &trans    &trans &trans
                &trans &mmv MOVE_X(-1200) &mmv MOVE_Y(1200) &mmv MOVE_Y(-1200) &mmv MOVE_X(1200) &trans &trans           &trans    &trans  &trans &trans        &trans &trans &kp RALT &kp RSFT &kp RCTRL &none &trans
                &trans &trans         &trans         &trans       &trans          &trans                            &trans  &trans                      &trans &trans   &trans   &trans    &trans &trans
                &trans &trans         &trans         &trans       &trans                        &mkp LCLK &mkp RCLK &trans  &trans &trans &trans               &trans   &trans   &trans    &trans &trans
            >;
        };
        slow_mouse {
            bindings = <
                &trans &trans         &trans         &trans       &trans          &trans &trans                                                  &trans &trans &trans   &trans   &trans    &trans &trans
                &trans &msc MOVE_X(-30) &msc MOVE_Y(-30) &msc MOVE_Y(30) &msc MOVE_X(30) &trans &trans                                                  &trans &trans &trans   &trans   &trans    &trans &trans
                &trans &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &trans &trans           &trans    &trans  &trans &trans        &trans &trans &kp RALT &kp RSFT &kp RCTRL &trans &trans
                &trans &trans         &trans         &trans       &trans          &trans                            &trans  &trans                      &trans &trans   &trans   &trans    &trans &trans
                &trans &trans         &trans         &trans       &trans                        &mkp LCLK &mkp RCLK &trans  &trans &trans &trans               &trans   &trans   &trans    &trans &trans
            >;
        };
        mod {
            bindings = <
                &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                               &trans      &none &none      &none      &none &none &none
                &none &none        &none        &none        &none        &none        &bootloader                                                         &bootloader &none &none      &none      &none &none &none
                &none &none        &none        &none        &none        &none        &none             &none &none &bt BT_CLR &none                      &none       &none &none      &none      &none &none &none
                &none &none        &none        &none        &none        &none                                &none &none                                             &none &none      &none      &none &none &none
                &none &none        &none        &none        &none                                 &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                   &bl BL_INC &bl BL_DEC &none &none &none
            >;
        };
        numbers {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans                                                   &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans                                                   &trans &trans &trans &trans &trans &trans &trans
                &trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &trans            &trans &trans  &trans &trans           &trans &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &trans
                &trans &trans &trans &trans &trans &trans                          &trans  &trans                         &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans               &trans  &kp UNDER &trans  &trans &kp UNDER &trans               &trans &trans &trans &trans &trans
            >;
        };
    };
};
